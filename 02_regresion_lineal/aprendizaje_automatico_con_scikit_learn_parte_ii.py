# -*- coding: utf-8 -*-
"""aprendizaje-automatico-con-scikit-learn-parte-ii.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1htfAoTNojaqmOEznirS3yXB7P7ICq9BL

Instalamos el software que vamos a necesitar para este ejercicio
"""

pip install scikit-learn

"""Realizamos la carga del dataset Boston que contiene los atributos y valores que vamos a usar para resolver el problema de regresión."""

from sklearn.datasets import load_boston

dataset = load_boston()
# Mostramos la descripción para nuestro dataset
print(dataset['DESCR'])
# Mostramos los valores de una instancia
print(dataset['data'][0])

"""Importamos un modelo lineal y preparamos para entrenar"""

# Importamos el modelo de regresión lineal
from sklearn.linear_model import LinearRegression
lin_reg = LinearRegression()

# Extraemos los atributos (X) y los valores objetivo (Y)
X = dataset['data']
Y = dataset['target']

# Entrenamos el modelo
lin_reg.fit(X, Y)

"""Realizamos una predicción"""

# Mostramos la predicción para un ejemplo del dataset
print(lin_reg.predict([X[10]]))
# Mostramos el valor real que tiene el inmueble en nuestro dataset
print(Y[10])

"""Podemos ver el error medio que nos daría el modelo con el siguiente código"""

from sklearn.metrics import mean_squared_error
import numpy as np
preds = lin_reg.predict(X)

# Calculamos el error medio entre las predicciones del modelo con los valores reales
mse = mean_squared_error(Y, preds)
rmse = np.sqrt(mse)
print(mse)
print(rmse)

mean = np.mean(Y)
print(mean)
print(rmse * 100  / mean)

